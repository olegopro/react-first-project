{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","src","alt","message","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","MyPosts","postsElements","posts","map","post","postsBlock","values","addPost","newPostTexts","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","Profile","ProfileContainer","this","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","Component","compose","auth","id","isAuth","withRouter"],"mappings":"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","file":"static/js/3.91d6825f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","import React from 'react'\nimport classes from './Post.module.css'\n\nfunction Post(props) {\n\treturn (\n\t\t<div className={classes.item}>\n\t\t\t<img src=\"https://placeimg.com/640/480/people\" alt=\"avatar\" />\n\t\t\t{props.message}\n\t\t\t<div>\n\t\t\t\t<span>like</span>\n\t\t\t\t<span>dislike</span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Post\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { maxLengthCreator, required } from '../../../utils/validators/validators'\nimport { Textarea } from '../../common/FormsControls/FormsControls'\nimport classes from './MyPosts.module.css'\nimport Post from './Post/Post'\n\nconst maxLength10 = maxLengthCreator(10)\n\nlet AddNewPostForm = props => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t<div>\n\t\t\t\t<Field\n\t\t\t\t\tname=\"newPostTexts\"\n\t\t\t\t\tcomponent={Textarea}\n\t\t\t\t\tvalidate={[required, maxLength10]}\n\t\t\t\t\tplaceholder=\"Post message\"\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<button>Add post</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nlet AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\n\nconst MyPosts = props => {\n\tlet postsElements = props.posts.map(post => {\n\t\treturn <Post message={post.message} />\n\t})\n\n\t// let newPostElement = React.createRef()\n\n\tlet onAddPost = values => {\n\t\tprops.addPost(values.newPostTexts)\n\t}\n\n\treturn (\n\t\t<div className={classes.postsBlock}>\n\t\t\t<h3>My posts</h3>\n\t\t\t<AddNewPostFormRedux onSubmit={onAddPost} />\n\t\t\t<div className={classes.posts}>{postsElements}</div>\n\t\t</div>\n\t)\n}\n\nexport default MyPosts\n","import { connect } from 'react-redux'\nimport { addPostActionCreator } from '../../../Redux/profile-reducer'\nimport MyPosts from './MyPosts'\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tposts: state.profilePage.posts,\n\t\tnewPostText: state.profilePage.newPostText\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\taddPost: newPostText => {\n\t\t\tdispatch(addPostActionCreator(newPostText))\n\t\t}\n\t}\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer\n","import React, { useEffect, useState } from 'react'\n\nconst ProfileStatusWithHooks = props => {\n\tlet [editMode, setEditMode] = useState(false)\n\tlet [status, setStatus] = useState(props.status)\n\n\tuseEffect(() => {\n\t\tsetStatus(props.status)\n\t}, [props.status])\n\n\tconst activateEditMode = () => {\n\t\tsetEditMode(true)\n\t}\n\n\tconst deactivateEditMode = () => {\n\t\tsetEditMode(false)\n\t\tprops.updateStatus(status)\n\t}\n\n\tconst onStatusChange = e => {\n\t\tsetStatus(e.currentTarget.value)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{!editMode && (\n\t\t\t\t<div>\n\t\t\t\t\t<span onDoubleClick={activateEditMode}>{props.status || 'No status'}</span>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{editMode && (\n\t\t\t\t<div>\n\t\t\t\t\t<input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default ProfileStatusWithHooks\n","import React from 'react'\nimport Preloader from '../../common/Preloader/Preloader'\nimport classes from './ProfileInfo.module.css'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\n\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\n\tif (!profile) {\n\t\treturn <Preloader />\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={classes.descriptionBlock}>\n\t\t\t\t<img src={profile.photos.large} alt=\"\" />\n\t\t\t\t<ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default ProfileInfo\n","import React from 'react'\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\n\nconst Profile = props => {\n\treturn (\n\t\t<div>\n\t\t\t<ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n\t\t\t<MyPostsContainer />\n\t\t</div>\n\t)\n}\n\nexport default Profile\n","import React from 'react'\n\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { compose } from 'redux'\n\nimport { getStatus, getUserProfile, updateStatus } from '../../Redux/profile-reducer'\nimport Profile from './Profile'\n\nclass ProfileContainer extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Profile\n\t\t\t\t{...this.props}\n\t\t\t\tprofile={this.props.profile}\n\t\t\t\tstatus={this.props.status}\n\t\t\t\tupdateStatus={this.props.updateStatus}\n\t\t\t/>\n\t\t)\n\t}\n\n\tcomponentDidMount() {\n\t\tlet userId = this.props.match.params.userId\n\t\tif (!userId) {\n\t\t\tuserId = this.props.authorizedUserId\n\t\t\tif (!userId) this.props.history.push('/login')\n\t\t}\n\n\t\tthis.props.getUserProfile(userId)\n\t\tthis.props.getStatus(userId)\n\t}\n}\n\nlet mapStateToProps = state => ({\n\tprofile: state.profilePage.profile,\n\tstatus: state.profilePage.status,\n\tauthorizedUserId: state.auth.id,\n\tisAuth: state.auth.isAuth\n})\n\nexport default compose(\n\tconnect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n\twithRouter\n)(ProfileContainer)\n"],"sourceRoot":""}